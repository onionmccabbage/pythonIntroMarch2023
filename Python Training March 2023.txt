Python Training March 2023
==========================

Toby Dussek 

9:30 start
11:00 coffee
12:30 lunch
3:00 tea break
4:30 end

Monday
> Welcome
> where to write code: immediate and module
> Pycharm or VSCode or ...
> overview of Python 3 (and Python 2)
- architecture, structure, and code best practice
> print( , end=', ') and input()
> maths operators and data types
> the if statement for conditional logic
> while loop, break and pass
> indentation
> immutable strings
> print formatting
> iterable collections
- memory efficiency
> identifiers
> boolean True and False
- type and type conversion, also isinstance() and isnumeric()
> validate input before casting it
> string manipulation
> Python indent syntax
> Lists, Tuples and nested collections
> after lunch review exercise
> dictionaries (non-numeric indexed iterable collections)
> very big numeric values
> looping with 'for'
> range
> generator (efficient since values do not persist in memory)
> classes

Tuesday
> quick review of where we got to
> import, pip, libraries and modules
> to add libraries to python:
  - python -m ensurepip
  - python â€“m pip install requests (or any other library you need)
  - python3 -m ensurepip
> revisit classes
> requests
- comprehension
- other kinds of Python
  Python is written in C (often refered to as cpython)
> functions: *args, **kwargs  
- strings with triple quotes
- architecture: modules __init__.py and __name__ == '__main__'
> exception handling
> review exercise
  > show and tell
> importing modules
- File input and output
- read and write binary files (bytes)
> share the links to 'course documentation'

Wednesday
- brief review so far
- list of useful libraries
- functions live in classes, which live in modules which live in packages
  https://docs.python.org/3/howto/pyporting.html
- PEP8 style guide
- global and local scope 
- overview of testing
- string formatting syntax
- data modelling structures: use built in structures until they do not suit the purpose (then use classes)
> Objects and Classes (OOP)
> get/set as property decorators @property
> name mangling (__)
> properties, methods, __str__
- intrinsic attributes: __doc__ etc.
- documentation strings (docstring) for classes
- special operators and overriding
- inheritance
- composition, static and class methods
- review exercise
- how to format with certain dp
- debug tools
- where to go from here:
  https://pynative.com/python-exercises-with-solutions/
  the next courses: advanced python then further advanced python
- end of course feedback

Some really useful Python websites (free)
- https://www.learnpython.org/
- https://www.freecodecamp.org/news/the-python-handbook/
- https://automatetheboringstuff.com/

all code will be here: 
https://github.com/onionmccabbage/pythonIntroMarch2023
The recordings will be provided here: 
https://s3.eu-west-1.amazonaws.com/neueda.conygre.com/Sites/Programming_in_Python-March23/site/index.html

Links
- Python official site https://python.org
- PEP8 style guide https://www.python.org/dev/peps/pep-0008/
- online Python interpreter https://repl.it/languages/Python3
